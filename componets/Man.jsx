/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 public/models/man.gltf 
*/

import React, { useRef } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import { useCustomization } from '../src/context/Customization'

const Man = (props) => {

  const {material,legs} = useCustomization();

  const { nodes, materials } = useGLTF('./models/man.gltf')
  
  const clothTextureProps = useTexture({
    map: './public/textures/cloth/Fabric_Knitted_006_basecolor.jpg',
    normalMap: './public/textures/cloth/Fabric_Knitted_006_Normal.jpg',
    roughnessMap: './public/textures/cloth/Fabric_Knitted_006_Roughness.jpg',
    aoMap: './public/textures/cloth/Fabric_Knitted_006_AmbientOcclusion.jpg',
  })

  const skinTextureProps = useTexture({
    map: './public/textures/skin/Skin_Human_002_COLOR.png',
    normalMap: './public/textures/skin/Skin_Human_002_NRM.png',
    roughnessMap: './public/textures/skin/Skin_Human_002_SPEC.png',
    aoMap: './public/textures/skin/Skin_Human_002_OCC.png',
  })

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.body.geometry} position={[0, 3.038, 0]} >
          <meshStandardMaterial {...material === "cloth" ?clothTextureProps : skinTextureProps}/>
      </mesh>
      <mesh geometry={nodes.legs1.geometry} position={[0, 1.143, 0]} visible = {legs ===1 }>
        <meshStandardMaterial {...skinTextureProps}/>
      </mesh>
      <mesh geometry={nodes.left.geometry}  position={[0, 3.087, 2.009]}>
      <meshStandardMaterial {...skinTextureProps}/>
      </mesh>
      <mesh geometry={nodes.right.geometry}  position={[0, 3.042, -1.992]} >
      <meshStandardMaterial {...skinTextureProps}/>
      </mesh>
      <mesh geometry={nodes.head.geometry}  position={[0, 4.213, 0]} >
      <meshStandardMaterial {...skinTextureProps}/>
      </mesh>
      <mesh geometry={nodes.legs2.geometry}  position={[0, 1.013, 0]} rotation={[-Math.PI, 0, 0]} visible={legs === 2 }>
      <meshStandardMaterial {...skinTextureProps}/>
      </mesh>
      </group>
  )
}

useGLTF.preload('./models/man.gltf')

export default Man;
